plugins {
    id 'application'
    id 'org.beryx.jlink' version '2.26.0'
}

dependencies {
    implementation (libs.codion.swing.framework.ui)

    implementation (libs.json)
    implementation (libs.flatlaf.intellij.themes)

    runtimeOnly (libs.codion.plugin.logback.proxy) {
        exclude group: 'com.sun.mail', module: 'javax.mail'
    }

    runtimeOnly (libs.codion.framework.db.local)
    runtimeOnly (libs.codion.dbms.h2database)
    runtimeOnly (libs.h2)

    testImplementation (libs.codion.framework.domain.test)
    testImplementation (libs.junit.api)
    testRuntimeOnly (libs.junit.engine)
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(19)
    }
}

test {
    useJUnitPlatform()
    systemProperty "codion.db.url", "jdbc:h2:mem:h2db"
    systemProperty "codion.db.initScripts", "classpath:create_schema.sql"
    systemProperty "codion.test.user", "scott:tiger"
}

applicationDefaultJvmArgs = [
        "-Dcodion.client.connectionType=local",
        "-Dcodion.db.url=jdbc:h2:mem:h2db",
        "-Dcodion.db.initScripts=classpath:create_schema.sql",
        "-Dsun.awt.disablegrab=true"
]

application {
    mainModule = "is.codion.framework.demos.petclinic"
    getMainClass().set("is.codion.framework.demos.petclinic.ui.PetclinicAppPanel")
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
    options.deprecation = true
}

jlink {
    imageName = project.name
    moduleName.set(application.mainModule)

    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages', '--add-modules',
               'is.codion.framework.db.local,is.codion.dbms.h2database,is.codion.plugin.logback.proxy']

    launcher {
        jvmArgs = applicationDefaultJvmArgs
    }

    jpackage {
        imageName = "Pet-Clinic"
        appVersion = project.version.replace('-SNAPSHOT', '')
        if (org.gradle.internal.os.OperatingSystem.current().linux) {
            installerType = 'deb'
            icon = "src/main/icons/petclinic.png"
            installerOptions = [
                    '--resource-dir', 'build/jpackage/Pet-Clinic/lib',
                    '--linux-shortcut'
            ]
        }
        if (org.gradle.internal.os.OperatingSystem.current().windows) {
            installerType = 'msi'
            icon = "src/main/icons/petclinic.ico"
            installerOptions = [
                    '--win-menu',
                    '--win-shortcut'
            ]
        }
    }
}